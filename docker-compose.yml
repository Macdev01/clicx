version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: clixxx_postgres
    environment:
      POSTGRES_DB: clixxx_db
      POSTGRES_USER: clixxx_user
      POSTGRES_PASSWORD: clixxx_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/migrations:/docker-entrypoint-initdb.d/
    networks:
      - clixxx_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U clixxx_user -d clixxx_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: clixxx_backend
    environment:
      # Database configuration
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: clixxx_user
      DB_PASSWORD: clixxx_password
      DB_NAME: clixxx_db
      DB_SSLMODE: disable
      
      # App configuration
      APP_PORT: 8080
      GIN_MODE: release
      
      # Add other environment variables as needed
      # FIREBASE_PROJECT_ID: your-project-id
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - clixxx_network
    volumes:
      # Mount Firebase credentials if you have them locally
      - ./backend/clixxx-dev-44e45f09d47f.json:/root/clixxx-dev-44e45f09d47f.json:ro
    restart: unless-stopped

  # Frontend Service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: clixxx_frontend
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://localhost:8080
      
      # Firebase Authentication Configuration
      - NEXT_PUBLIC_FIREBASE_API_KEY=${NEXT_PUBLIC_FIREBASE_API_KEY}
      - NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=${NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN}
      - NEXT_PUBLIC_FIREBASE_PROJECT_ID=${NEXT_PUBLIC_FIREBASE_PROJECT_ID}
      - NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=${NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET}
      - NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=${NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID}
      - NEXT_PUBLIC_FIREBASE_APP_ID=${NEXT_PUBLIC_FIREBASE_APP_ID}
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - clixxx_network
    restart: unless-stopped

# Networks
networks:
  clixxx_network:
    driver: bridge

# Volumes
volumes:
  postgres_data:
    driver: local 